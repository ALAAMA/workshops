
* change directory
cd "C:/Users/dataclass/Desktop/StataDatMan"

dir

* use the gss data set
use gss.dta

* create "hapnew" variable
gen hapnew = . //set to missing
replace hapnew=1 if happy==1 //set to 1 if happy equals 1
replace hapnew=1 if happy>3 & hapmar>3 //set to 1 if happy and hapmar = 3
replace hapnew=3 if happy>4 | hapmar>4 //set to 3 if happy or hapmar = 4
tab hapnew // tabulate the new variable

* recode the wrkstat variable 
recode wrkstat (1=8) (2=7) (3=6) (4=5) (5=4) (6=3) (7=2) (8=1)
recode wrkstat (1=8), gen(wrkstat2)
tab wrkstat

* count number of yes on comp email and interwebs 
egen compuser= anycount(usecomp usemail usenet), values(1)
tab compuser

* count number missing 
egen countmiss = rowmiss(age-wifeft)
codebook countmiss

* compute difference scores
egen ftdiff=diff(wkft*)
codebook ftdiff

* tabulate happy separately for male and female 
bysort sex: tab happy

* generate separate histograms for female and male 
hist happy, by(sex)

* generate summary statistics using bysort 
bysort state: egen stateincome = mean(income)
bysort degree: egen degreeincome = mean(income)
bysort marital: egen marincomesd = sd(income)

* generate and replace without considering missing values
gen hi_ed=0
replace hi_ed=1 if wifeduc>15

tab hi_ed, mi nola

* try again, working around missing values
drop hi_ed
gen hi_ed = 0 if wifeduc != . //don't set a value if wifeduc is missing
replace hi_ed=1 if wifeduc >15 & wifeduc !=. // only replace non-missing
tab hi_ed, mi //check to see that missingness is preserved

mvdecode _all, mv(999)

* not run; example only. generate "newvar" equal to numeric version of var2
destring var1, gen(newvar)

* not run; example only.
tostring var1, gen(newvar)

* create string variable and convert to date
gen today = "Feb 18, 2011"
gen date1 = date(today, "MDY")
tab date1

* format so humans can read the date
format date1 %d
tab date1

* Not run: conceptual example only
generate double time2 = clock(time, "DMYHMS")
tab time2
format time2 %tc
tab time2

* create a variable "id" equal to the row number 
generate id = _n

* Not run: conceptual example only. Merge school and student data
merge m:1 schoolID using school.dta

* Not run: conceptual example only.
merge 1:m schoolID using student.dta

* Not run: conceptual example. add rows of data from dataset2 
append using dataset2

* Not run: conceptual example.
append using dataset1, generate(observesource)

* Not run: conceptual exampe. Similar to merge but drops non-matches
joinby participant using dataset1

* Not run: conceptual example. calculate average ptsatisfaction by hospital
save originaldata
collapse (mean) ptsatisfaction, by(hospital)
save hospitalcollapse

* create mean ptsatisfaction, median ptincome, sd ptsatisfaction for each hospital
collapse (mean) ptsatisfaction (median) ptincome (sd) ptsatisfaction, by(hosptial)

* Same as previous example, but rename variables
collapse (mean) ptsatmean=ptsatisfaction (median) ptincmed=ptincome
 (sd) sdptsat=ptsatisfaction, by(hospital)
