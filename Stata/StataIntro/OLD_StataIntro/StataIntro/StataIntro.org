#+TITLE:     Introduction to Stata
#+AUTHOR:    Ista Zahn
#+EMAIL:     support@help.hmdc.harvard.edu
#+DATE:      Friday February 8, 2013 


#+LaTeX_HEADER: \usepackage{tikz}
#+LaTeX_HEADER: \usepackage{minted}
#+LaTeX_HEADER: \usepackage{fancyvrb}
#+LaTeX_HEADER: \usemintedstyle{perldoc}
#+LaTeX_HEADER: \definecolor{lightgray}{gray}{0.9}
#+LaTeX_HEADER: \setlength{\tabcolsep}{1ex}
#+LaTeX_HEADER: \institute{IQSS}
#+latex_header: \usetheme{Warsaw}
#+latex_header: \useoutertheme{infolines}
# #+latex_header: \setbeamercolor{block body}{bg=black, fg=white}
#+LATEX_HEADER: \setbeamersize{text margin left=1.25cm, text margin right=1.25cm}
#+latex_header: \titlegraphic{\includegraphics[width=.75\textwidth]{images/IQSSNewLogo.pdf}}
#+latex_header: \AtBeginSection[]{\begin{frame}<beamer>\frametitle{Topic}\tableofcontents[currentsection]\end{frame}}

#+LANGUAGE:  en
#+OPTIONS:   H:2 toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:   
#+LINK_HOME: 
#+startup: beamer inlineimages
#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [table]
#+BEAMER_FRAME_LEVEL: 2

#+COLUMNS: %20ITEM %13BEAMER_env(Env) %6BEAMER_envargs(Args) %4BEAMER_col(Col) %7BEAMER_extra(Extra)

#+PROPERTY: cache no
# change to code for text export
#+PROPERTY: exports code
#+PROPERTY: results output
#+Property: comments org
#+PROPERTY: tangle StataIntroCodeOnly.do


** Setup								   :noexport:
#+LaTeX: \rowcolors{1}{blue!15}{blue!3}
#+LaTeX: \definecolor{bg}{rgb}{0.95,0.95,0.95}
#+LaTeX: \definecolor{cbg}{cmyk}{0,0,.1,0}

#+name: setup-minted
#+begin_src emacs-lisp :exports none :results silent :tangle no
  (setq org-babel-stata-command "stata -q")
  (setq org-export-latex-listings 'minted)
  (setq org-export-latex-minted-options
        '(("fontsize" "\\footnotesize")))
  (setq org-latex-to-pdf-process
        '("pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"
          "pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"
          "pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"))
  
  (setq LaTeX-command "latex -shell-escape") 
  
  (add-hook 'org-babel-after-execute-hook 'org-display-inline-images)
  
  (setq org-export-latex-verbatim-wrap
       '("\\vspace{-.5em}\n \\begin{columns}\n \\column{.95\\linewidth}\n \\begin{block}{}\n \\begin{minted}[linenos=true, fontsize=\\footnotesize]{c}\n" . "\\end{minted}\n \\end{block}\n \\end{columns}\n \\vspace{.25em}\n "))
  
  (setq org-babel-min-lines-for-block-output 0)
  (setq org-export-babel-evaluate nil)
  (setq org-export-latex-minted-langs 'nil)
  (add-to-list 'org-export-latex-minted-langs '(stata "c"))

  (setq org-babel-min-lines-for-block-output 0)
#+end_src

* Introduction

** Documents for today
USERNAME: dataclass
PASSWORD: dataclass
- Find class materials at:  Scratch > StataIntro
- FIRST THING: copy this folder to your desktop!
**          Organization
- Please feel free to ask questions at any point if they are relevant to the current topic (or if you are lost!)
# - There will be a Q&A after class for more specific, personalized questions
- Collaboration with your neighbors is encouraged
- If you are using a laptop, you will need to adjust paths accordingly
- Make comments in your Do-file rather than on hand-outs  
  - save on flash drive or email to yourself

** Workshop descripton
- This is an *introduction* to Stata
- Assumes no/very little knowledge of Stata
- Not appropriate for people already well familiar with Stata
- Learning Objectives:
  - Familiarize yourself with the Stata interface
  - Get data in and out of Stata
  - Compute statistics and construct graphical displays
  - Compute new variables and transformations

**        Why stata?
- Used in a variety of disciplines
- User-friendly
- Great guides available on web (as well as in HMDC computer lab library)
- Student and other discount packages available at reasonable cost

** Stata interface

[[file:images/StataInterface.png]]
 
- Review and Variable windows can be closed (user preference)
- Command window can be shortened (recommended)

**                      Do-files

- You can type all the same commands into the Do-file that you would type into the command window
- BUT...the Do-file allows you to *save* your commands
- Your Do-file should contain ALL commands you executed -- at least all the "correct" commands!
- I recommend never using the command window or menus to make CHANGES to data
- Saving commands in Do-file allows you to keep a written record of everything you have done to your data
  - Allows easy replication
  - Allows you to go back and re-run commands,  analyses and make modifications


** Stata help
- Easiest way to get help in Stata - just type *help* followed by topic or command, e.g., 
  *help regress*
- Falls back to "search" if command not found
- Generally, if you google "Stata [topic]," you'll get some helpful hits
- UCLA website:
  http://www.ats.ucla.edu/stat/Stata/

** General Stata command syntax
- Most Stata commands follow the same underlying principles
  *Command varlist, options*, e.g., *sum var1 var2, detail*
   - CAUTION - in some cases, if you type a command and don't specify a variable, Stata will perform the command on all variables in your dataset
- You can find command-specific syntax in the help files

** Commenting and formatting syntax
- Start with comment describing your Do-file and use comments throughout
- Single line and block comments
#+LATEX: \vspace{-.5em} \begin{columns} \column{.85\linewidth} \begin{block}{}
#+name: commentSyntax
#+begin_src stata :exports code
    
  // comment
   describe var
   /*
   comment block comment block comment block comment
   block comment block comment block 
  */
#+end_src
#+LATEX: \end{block} \end{columns}

- Use /// to break varlists over multiple lines:
#+LATEX: \vspace{-.5em} \begin{columns} \column{.85\linewidth} \begin{block}{}
#+name: breakLines
#+begin_src stata
  // break commands over multible lines
  describe var1 var2 var2 ///
  var4 var5 var6  
#+end_src
#+LATEX: \end{block} \end{columns}


** Let's get started
- Launch the Stata program (MP or SE, does not matter unless doing computationally intensive work)
  - Open up a new Do-file
  - Run our first Stata code!
 
#+LATEX: \vspace{-.5em} \begin{columns} \column{.85\linewidth} \begin{block}{}
#+name: firstSteps
#+begin_src stata
  // change directory
  cd "C://Users/dataclass/Desktop/StataIntro"
  // start a log file to record your stata session
  log using myStataLog, replace
  // Pause / resume logging with "log on" / "log off"
#+end_src
#+LATEX: \end{block} \end{columns}

** How to start every do-file
1. Describe what the file does
2. Change directory
3. Begin log file
4. Call up data
5. Save data under new name (if making changes to dataset)



* Getting data into Stata


** Data file commands
- Next, we want to open our data file
- Open/save data sets with "use" and "save":

#+LATEX: \vspace{-.5em} \begin{columns} \column{.85\linewidth} \begin{block}{}
#+name: getData
#+begin_src stata
  // open the gss.dta data set
  use dataSets/gss.dta
  // saving your data file:
  save newgss.dta, replace
  /* the "replace" option tells stata it's OK to 
     write over an existing file */
#+end_src

#+RESULTS: getData

#+LATEX: \end{block} \end{columns}

** A note about path names
- If your path has no spaces in the name (that means all directories, folders, file names, etc. can have no spaces), you can write the path as is
- If there are spaces, you need to put your pathname in quotes
- Best to get in the habit of quoting paths
 
** Where's my data?
- Data editor (*browse*)
- Data editor (*edit*)
   - Using the data editor is discouraged (why?)
- Always keep any changes to your data in your Do-file
- Avoid temptation of making manual changes by viewing data via the browser rather than editor

** What if my data is not a Stata file?
- Import delimited text files
#+LATEX: \vspace{-.5em} \begin{columns} \column{.85\linewidth} \begin{block}{}
#+name: insheet
#+begin_src stata
  /* import data from a .csv file */
  insheet using gss.csv, clear
  /* save data to a .csv file */
  outsheet using gss_new.csv, replace comma  
#+end_src
#+LATEX: \end{block} \end{columns}

- Import data from SAS and Excel
#+LATEX: \vspace{-.5em} \begin{columns} \column{.85\linewidth} \begin{block}{}
#+name: loadSAStransport
#+begin_src stata
    /* import/export SAS xport files */
    import sasxport gss.xpt
    export sasxport newFileName

    /* import/export data from Excel */
    import excel using gss.xls, firstrow
    export excel newFileName.xls
#+end_src
#+LATEX: \end{block} \end{columns}
  
** What if my data is from another statistical software program?
- SPSS/PASW will allow you to save your data as a Stata file
  - Go to: file > save as > Stata (use most   recent version available)
  - Then you can just go into Stata and   open it
- Another option is *StatTransfer*, a program that converts data from/to many common formats, including SAS, SPSS, Stata, and many more

** Exercise 1: Importing data
1. Close down Stata and open a new session
2. Go through the three steps for starting each Stata  session that we reviewed
   - Begin a log file
   - Open your Stata dataset (gss.dta)
   - Save your Stata dataset using a different name
3. Try opening the following files:
   - A comma separated value file: gss.csv
   - A SPSS file: gss.sav
   - A SAS transport file: gss.xpt


* Statistics and graphs 

** Frequently used commands
- Commands for reviewing and inspecting data:
  - describe // labels, storage type etc.
  - sum // statistical summary (mean, sd, min/max etc.)
  - codebook // storage type, unique values, labels
  - list // print actuall values
  - tab // (cross) tabulate variables
  - browse // view the data in a spreadsheet-like window

- Examples
#+LATEX: \vspace{-.5em} \begin{columns} \column{.85\linewidth} \begin{block}{}
#+name: commonDescriptiveCommands
#+begin_src stata
    /* commands useful for inspecting data */
   sum educ // statistical summary of education 
   codebook region // information about how region is coded
   tab sex // numbers of male and female participants
#+end_src
#+LATEX: \end{block} \end{columns}

- Remember, if you run these commands without specifying variables, Stata will produce output for every variable

** Basic graphing commands
- Univariate distribution(s) using *hist*
#+LATEX: \vspace{-.5em} \begin{columns} \column{.85\linewidth} \begin{block}{}
#+name: histograms
#+begin_src stata
  /* Histograms */
  hist educ
  /* Interested in normality of your data? You can tell
 Stata to draw the normal curve over your histogram*/
  hist age, normal  
#+end_src
#+LATEX: \end{block} \end{columns}

- View bivariate distributions with scatterplots
#+LATEX: \vspace{-.5em} \begin{columns} \column{.85\linewidth} \begin{block}{}
#+name: bivariateDisplay
#+begin_src stata
   /* scatterplots */
   twoway (scatter educ age)
   graph matrix educ age inc
#+end_src
#+LATEX: \end{block} \end{columns}

** The "by" command
- Sometimes, you'd like to generate  output based on different categories of a grouping variable
- The "by" command does just this

#+LATEX: \vspace{-.5em} \begin{columns} \column{.85\linewidth} \begin{block}{}
#+name: byprocess
#+begin_src stata
  /* tabulate happy separately for men and women */
  bysort sex: tab happy
  /* not all commands can be used with the by prefix.
     some, (like hist) have a "by" option instead */
  hist happy, by(sex)  
#+end_src
#+LATEX: \end{block} \end{columns}


** Exercise 2: Descriptive statistics
1. Use the dataset, gss.dta 
2. Examine a few selected variables using the describe, sum and codebook commands
3. Tabulate the variable, "marital," with and without labels
4. Summarize the variable, "income" separately participants based on marital status
5. Cross-tabulate marital with region and show gender percent by region
6. Summarize the variable, "happy" for married individuals only
7. Generate a histogram of income
8. Generate a second histogram of income, but this time, split income based on participants sex and ask Stata to print the normal curve on your histograms


* Basic data management

** Labels
- You never know why and when your data may be reviewed
- ALWAYS label every variable no matter how insignificant it may seem
- Stata uses two sets of labels: *variable labels* and *value labels*
- Variable labels are very easy to use -- value labels are a little more complicated

** Variable and value labels
- Variable labels
#+LATEX: \vspace{-.5em} \begin{columns} \column{.85\linewidth} \begin{block}{}
#+name: variableLabels
#+begin_src stata
  /* Label variable inc "household income" */
  label var inc "household income"

  /* Want to change the name of your variable? */
  rename oldvarname newvarname
#+end_src
#+LATEX: \end{block} \end{columns}

- Value labels are a two step process: define a value label, then assign defined label to variable(s) 

#+LATEX: \vspace{-.5em} \begin{columns} \column{.85\linewidth} \begin{block}{}
#+name: valueLabels
#+begin_src stata 
  /*define a value label for sex */
  label define mySexLabel 1 "Male" 2 "Female"
  /* assign our "example" label to var1 through var3 */
  label val sex  mySexLabel
  /* Label define particularly useful when you have
    multiple variables with the same value structure  */
  /* If you have many variables, you can search labels 
     using lookfor */
  lookfor income
#+end_src
#+LATEX: \end{block} \end{columns}

** Exercise 3: Variable labels and value labels
1. Open the data set *gss.csv* 
2. Familiarize yourself with the  data using describe, sum, etc.
3. Rename and label variables using the following codebook:
#+LATEX: { \scriptsize
| *var* | *rename to* | *label with*        |
|-------+-------------+---------------------|
| v1    | marital     | marital status      |
| v2    | age         | age of respondent   |
| v3    | educ        | education           |
| v4    | sex         | respondent's sex    |
| v5    | inc         | household income    |
| v6    | happy       | general happiness   |
| v7    | region      | region of interview |
|-------+-------------+---------------------|
#+LATEX: } 
4. Add value labels to your "marital" variable using this codebook:
#+LATEX: { \scriptsize
| *value* | *label*         |
|---------+-----------------|
|       1 | "married"       |
|       2 | "widowed"       |
|       3 | "divorced"      |
|       4 | "separated"     |
|       5 | "never married" |
|---------+-----------------|
#+LATEX: } 

** Working on subsets
- It is often useful to select just those rows of your data where some condition holds--for example select only rows where sex is 1 (male)
- The following operators allow you to do this:
  - == :: equal to 
  - != :: not equal to
  - > :: greater than
  - < :: less than
  - >= :: greater than or equal to
  - <= :: less than or equal to
  - & :: and
  - | :: or
- Note the double equals signs for testing equality

** Generating and replacing variables
- Create new variables using "gen"
#+LATEX: \vspace{-.5em} \begin{columns} \column{.85\linewidth} \begin{block}{}
#+name: genNewVars
#+begin_src stata
  /* create a new variable named mc_inc"
     equal to inc minus the mean of inc */
  gen mc_inc = inc - 15.37  
#+end_src
#+LATEX: \end{block} \end{columns}

- Sometimes useful to start with blank values and fill them in based on values of existing variables

#+LATEX: \vspace{-.5em} \begin{columns} \column{.85\linewidth} \begin{block}{}
#+name: replaceExample
#+begin_src stata
  /* generate a column of missings */ 
  gen age_wealth = .
  /* Next, start adding your qualifications */
  replace age_wealth=1 if age<30 & inc < 10
  replace age_wealth=2 if age<30 & inc > 10
  replace age_wealth=3 if age>30 & inc < 10
  replace age_wealth=4 if age>30 & inc > 10

  /* conditions can also be combined with "or" */
  gen young=0
  replace young=1 if age_wealth==1 | age_wealth==2
#+end_src
#+LATEX: \end{block} \end{columns}

** Recoding, dropping variables

- Recoding variables
#+LATEX: \vspace{-.5em} \begin{columns} \column{.85\linewidth} \begin{block}{}
#+name: recodeVars
#+begin_src stata
  /* recode happy into sad */
  recode happy (1=3) (3=1), gen(sad)
#+end_src
#+LATEX: \end{block} \end{columns}

- Deleting variables
#+LATEX: \vspace{-.5em} \begin{columns} \column{.85\linewidth} \begin{block}{}
#+name: dropkeep
#+begin_src stata
   drop region  // delete region 
   keep age-inc // keep age, educ, sex, and inc
#+end_src
#+LATEX: \end{block} \end{columns}


** Exercise 4: Manipulating variables
1. Use the dataset, gss.dta
2. Generate a new variable, age2 equal to age squared
3. Generate a new "high income" variable that will take on a value of "1" if a person has an income value greater than "15" and "0" otherwise
4. Generate a new divorced/separated dummy variable that will take on a value of "1" if a person is either divorced or separated and "0" otherwise


* Wrap-up

** Help us make this workshop better!

- Please take a moment to fill out a very short feedback form

- These workshops exist for you – tell us what you need!

- [[http://tinyurl.com/6h3cxnz]]


** Additional resources

- IQSS workshops: http://projects.iq.harvard.edu/rtc/filter_by/workshops

- IQSS statistical consulting: http://rtc.iq.harvard.edu

- The RCE
  - Research Computing Enviroment (RCE) service available to Harvard & MIT users
  - [[www.iq.harvard.edu/research_computing]]
  - Wonderful resource for organizing data, running analyses efficiently
  - Creates a centralized place to store data and run analysis
  - Supplies persistent desktop environment accessible from any computer with an internet connection

