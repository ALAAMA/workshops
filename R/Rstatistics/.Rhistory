ls
pwd()
getwd()
library(colorout)
ls
install.packages("spdep", dependencies = TRUE)
library(spdep)
help.start()
map_crd
head(data)
head(IDs)
head(IDs)
str(W_knn1)
head(dist)
head(W_dist1)
plot(map)
head(W_dist1)
head(W_dist1)
head(W_dist1)
head(W_dist1)
length(W_dist1)
dim(IDs)
length(IDs)
args(all.equal)
?all.equal
args(identidcal)
args(identical)
identical(W_dist1[[1]], 0)
identical(W_dist1[[5]], 0)
W_dist1[[5]]
str(W_dist1[[5]])
str(0)
identical(W_dist1[[5]], 0L)
identical(W_dist1[[1]], 0L)
class(map)
class(eire)
plot(map)
class(W_dist1_mat)
head(W_dist1_mat)
?nb2listw
head(W_dist1_mat)
points(map, unlist(lapply(W_dist1_mat, sum)))
unlist(lapply(W_dist1_mat, sum))
unlist(lapply(W_dist1_mat[-1], sum))
unlist(lapply(W_dist1_mat[[2]], sum))
unlist(lapply(W_dist1_mat$weights, sum))
points(map, unlist(lapply(W_dist1_mat$sum, sum)))
points(card(map), unlist(lapply(W_dist1_mat$sum, sum)))
plot(map)
dev.new()
plot(map)
library(psych)
?ICC
q()
n
library(som)
install.packages("som")
library(som)
example(SOM)
SOM
require(kohonen)
install.packages(kohonen)
install.packages("kohonen")
example(SOM)
library(kohonen)
example(SOM)
class(crabs.som)
methods(class="SOM")
names(crabs.som)
?SOM
crabs.som$codes
q()
n
library(texreg)
?htmlreg
getwd()
q()
n
message("this is a harmless little message")
warning("this is a warning")
stop("this is an error!")
sadf
sf
list.files()
stop("foo")
q()
n
setwd("~/Documents/Work/IQSS/Classes/IQSS_Stats_Workshops/R/Rstatistics")
list.files("dataSets") # files in the dataSets folder
states.data <- readRDS("dataSets/states.rds")
states.info <- data.frame(attributes(states.data)[c("names", "var.labels")])
View(states.info)
tail(states.info, 8)
states.info
sts.ex.sat <- subset(states.data, select = c("expense", "csat"))
summary(sts.ex.sat)
sts.ex.sat <- subset(states.data, select = c("expense", "csat"))
summary(sts.ex.sat)
c(1, 2, 3)
c("a", "b")
args(subset)
args(subset.data.frame)
class(states.data)
methods(subset)
cor(sts.ex.sat)
x <- cor(sts.ex.sat)
class(x)
x[upper.tri(x)]
x[upper.tri(x)] <- NA
x
diag(x)
diag(x) <- NA
x
plot(sts.ex.sat)
methods(plot)
class(csat ~ expense)
sat.mod <- lm(csat ~ expense, # regression formula
data=states.data) # data set
sat.mod
summary(sat.mod) # show regression coefficients table
options(sci.pen = 10)
summary(sat.mod)
options(sci.pen = 100)
summary(sat.mod)
options(sci.pen = 10)
sat.mod <- summary(sat.mod)
sat.mod
sat.mod$coefficients <- round(sat.mod$coefficients, 2)
sat.mod
class(sat.mod)
typeof(sat.mod)
names(sat.mod)
sat.mod$call
sat.mod$coefficients
sat.mod$terms
sat.mod$coefficients
names(states.data)
summary(lm(csat ~ expense + pop, data = states.data))
View(states.info)
summary(lm(csat ~ expense + percent, data = states.data))
with(states.data, expense + percent)
class(sat.mod)
names(sat.mod)
methods(print)
args(method)
args(methods)
class(sat.mod)
methods(class = class(sat.mod))
sat.mod <- lm(csat ~ expense, # regression formula
data=states.data) # data set
class(sat.mod)
methods(class = class(sat.mod))
confint(sat.mod)
hist(residuals(sat.mod))
plot(sat.mod)
?confint.lm
sat.voting.mod <-  lm(csat ~ expense + house + senate,
data = na.omit(states.data))
sat.mod
sat.voting.mod <-  lm(csat ~ expense + house + senate,
data = na.omit(states.data))
sat.mod <- update(sat.mod, data=na.omit(states.data))
anova(sat.mod, sat.voting.mod)
?Formala
?formala
?formaula
?Formaula
?Formula
?formula
lm(csat ~ expense*income,
data=states.data)
sat.expense.by.percent <- lm(csat ~ expense*income,
data=states.data)
coef(summary(sat.expense.by.percent)) # show regression coefficients table
summary(sat.expense.by.percent) # show regression coefficients table
table(states.data$region)
class(states.data$region)
str(states.data$region)
typeof(states.data$region)
str(states.data$region)
sat.region <- lm(csat ~ region,
data=states.data)
levels(states.data$region)
coef(summary(sat.region)) # show regression coefficients table
anova(sat.region) # show ANOVA table
coef(summary(sat.region)) # show regression coefficients table
# change the reference group
contrasts(states.data$region)
coef(summary(lm(csat ~ C(region, base=4),
data=states.data)))
?contrasts
NH11 <- readRDS("dataSets/NatHealth2011.rds")
labs <- attributes(NH11)$labels
labs
str(NH11$hypev) # check stucture of hypev
levels(NH11$hypev)
NH11$hypev <- factor(NH11$hypev, levels=c("2 No", "1 Yes"))
str(NH11$hypev) # check stucture of hypev
?family
hyp.out <- glm(hypev~age_p+sex+sleep+bmi,
data=NH11, family=binomial(link = "probit"))
hyp.out <- glm(hypev~age_p+sex+sleep+bmi,
data=NH11, family="binomial")
summary(hyp.out)
hyp.out.tab <- coef(summary(hyp.out))
hyp.out.tab[, "Estimate"] <- exp(coef(hyp.out))
hyp.out.tab
with(NH11,
expand.grid(age_p = c(33, 63),
sex = "2 Female",
bmi = mean(bmi, na.rm = TRUE),
sleep = mean(sleep, na.rm = TRUE)))
# Create a dataset with predictors set at desired levels
predDat <- with(NH11,
expand.grid(age_p = c(33, 63),
sex = "2 Female",
bmi = mean(bmi, na.rm = TRUE),
sleep = mean(sleep, na.rm = TRUE)))
cbind(predDat, predict(hyp.out, type = "response",
se.fit = TRUE, interval="confidence",
newdata = predDat))
library(effects)
plot(allEffects(hyp.out))
table(NH11$r_maritl)
