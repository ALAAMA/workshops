hist(rpois(100))
hist(rpois(100, 4))
hist(rpois(100, 10))
hist(rpois(1000, 10))
hist(rpois(1000, 2))
q()
n
## function to generate distribution of means for a range of sample sizes
meanDist <- function(n, nsamp = 5000) {
  replicate(nsamp, mean(rnorm(n)))
}

## range of sample sizes to iterate over
sampSizes <- seq(10, 500, by = 5)
'org_babel_R_eoe'
library(parallel) 
system.time(means <- mclapply(sampSizes, meanDist, mc.cores = 7))
'org_babel_R_eoe'
library(parallel)
library(doParallel)
library(foreach)
registerDoParallel(2)
nLoops <- 2
out <- foreach(it = 1:nLoops) %dopar% {
  x <- diag(rep(1,3))
  solve(x)[1,1]
}

# parSapply example when cluster is based on forking
require(parallel)
cl <- makeCluster(2, type = "FORK")
testfun <- function(i){
    x <- diag(rep(1,3))
    solve(x)[1,1]
  }
out <- parSapply(cl, 1:4, testfun)

# mclapply example
require(parallel)
testfun <- function(i){
    x <- diag(rep(1,3))
    solve(x)[1,1]
  }
out2 <- mclapply(1:4, testfun, mc.cores = 2)
q()
n
